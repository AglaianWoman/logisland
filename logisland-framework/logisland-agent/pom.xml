<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2016 Hurence (bailet.thomas@gmail.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.hurence.logisland</groupId>
        <artifactId>logisland-framework</artifactId>
        <version>0.10.0-SNAPSHOT</version>
    </parent>
    <artifactId>logisland-agent</artifactId>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-kafka-0-10-plugin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>common-config</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>common-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>rest-utils</artifactId>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <version>1.54</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.raml.plugins</groupId>
                <artifactId>raml-jaxrs-maven-plugin</artifactId>
                <version>LATEST</version>
                <configuration>
                    <!-- Use sourcePaths if you want to provide a single RAML file or a list of RAML files -->
                    <sourceDirectory>${basedir}/src/main/raml</sourceDirectory>
                    <!-- Optionally configure outputDirectory if you don't like the default value: ${project.build.directory}/generated-sources/raml-JAX-RS -->
                    <!-- Replace with your package name -->
                    <basePackageName>com.hurence.logisland</basePackageName>
                    <!-- Valid values: 1.1 2.0 -->
                    <jaxrsVersion>2.0</jaxrsVersion>
                    <useJsr303Annotations>false</useJsr303Annotations>
                    <!-- Valid values: jackson1 jackson2 gson none -->
                    <jsonMapper>jackson2</jsonMapper>
                    <removeOldOutput>true</removeOldOutput>
                    <!-- Optionally set extensions to a list of fully qualified names of classes
                    that implement org.raml.jaxrs.codegen.core.ext.GeneratorExtension -->
                    <!-- for example:
                    <extensions>
                        <param>com.abc.AuthorizationAnnotationExtension</param>
                        <param>com.abc.ParameterFilterExtension</param>
                    </extensions>
                    Custom annotator for json schema to pojo convertor
                    <customAnnotator>com.abc.MyCustomAnnotator</customAnnotator>
                    -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        </pluginManagement>

    </build>
</project>
