# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Core Properties #
logisland.version=${logisland.version}
logisland.flow.configuration.file=${logisland.flow.configuration.file}
logisland.flow.configuration.archive.dir=${logisland.flow.configuration.archive.dir}
logisland.flowcontroller.autoResumeState=${logisland.flowcontroller.autoResumeState}
logisland.flowcontroller.graceful.shutdown.period=${logisland.flowcontroller.graceful.shutdown.period}
logisland.flowservice.writedelay.interval=${logisland.flowservice.writedelay.interval}
logisland.administrative.yield.duration=${logisland.administrative.yield.duration}
# If a component has no work to do (is "bored"), how long should we wait before checking again for work?
logisland.bored.yield.duration=${logisland.bored.yield.duration}

logisland.authority.provider.configuration.file=${logisland.authority.provider.configuration.file}
logisland.login.identity.provider.configuration.file=${logisland.login.identity.provider.configuration.file}
logisland.templates.directory=${logisland.templates.directory}
logisland.ui.banner.text=${logisland.ui.banner.text}
logisland.ui.autorefresh.interval=${logisland.ui.autorefresh.interval}
logisland.nar.library.directory=${logisland.nar.library.directory}
logisland.nar.working.directory=${logisland.nar.working.directory}
logisland.documentation.working.directory=${logisland.documentation.working.directory}

####################
# State Management #
####################
logisland.state.management.configuration.file=${logisland.state.management.configuration.file}
# The ID of the local state provider
logisland.state.management.provider.local=${logisland.state.management.provider.local}
# The ID of the cluster-wide state provider. This will be ignored if logisland is not clustered but must be populated if running in a cluster.
logisland.state.management.provider.cluster=${logisland.state.management.provider.cluster}
# Specifies whether or not this instance of logisland should run an embedded ZooKeeper server
logisland.state.management.embedded.zookeeper.start=${logisland.state.management.embedded.zookeeper.start}
# Properties file that provides the ZooKeeper properties to use if <logisland.state.management.embedded.zookeeper.start> is set to true
logisland.state.management.embedded.zookeeper.properties=${logisland.state.management.embedded.zookeeper.properties}


# H2 Settings
logisland.database.directory=${logisland.database.directory}
logisland.h2.url.append=${logisland.h2.url.append}

# FlowFile Repository
logisland.flowfile.repository.implementation=${logisland.flowfile.repository.implementation}
logisland.flowfile.repository.directory=${logisland.flowfile.repository.directory}
logisland.flowfile.repository.partitions=${logisland.flowfile.repository.partitions}
logisland.flowfile.repository.checkpoint.interval=${logisland.flowfile.repository.checkpoint.interval}
logisland.flowfile.repository.always.sync=${logisland.flowfile.repository.always.sync}

logisland.swap.manager.implementation=${logisland.swap.manager.implementation}
logisland.queue.swap.threshold=${logisland.queue.swap.threshold}
logisland.swap.in.period=${logisland.swap.in.period}
logisland.swap.in.threads=${logisland.swap.in.threads}
logisland.swap.out.period=${logisland.swap.out.period}
logisland.swap.out.threads=${logisland.swap.out.threads}

# Content Repository
logisland.content.repository.implementation=${logisland.content.repository.implementation}
logisland.content.claim.max.appendable.size=${logisland.content.claim.max.appendable.size}
logisland.content.claim.max.flow.files=${logisland.content.claim.max.flow.files}
logisland.content.repository.directory.default=${logisland.content.repository.directory.default}
logisland.content.repository.archive.max.retention.period=${logisland.content.repository.archive.max.retention.period}
logisland.content.repository.archive.max.usage.percentage=${logisland.content.repository.archive.max.usage.percentage}
logisland.content.repository.archive.enabled=${logisland.content.repository.archive.enabled}
logisland.content.repository.always.sync=${logisland.content.repository.always.sync}
logisland.content.viewer.url=${logisland.content.viewer.url}

# Provenance Repository Properties
logisland.provenance.repository.implementation=${logisland.provenance.repository.implementation}

# Persistent Provenance Repository Properties
logisland.provenance.repository.directory.default=${logisland.provenance.repository.directory.default}
logisland.provenance.repository.max.storage.time=${logisland.provenance.repository.max.storage.time}
logisland.provenance.repository.max.storage.size=${logisland.provenance.repository.max.storage.size}
logisland.provenance.repository.rollover.time=${logisland.provenance.repository.rollover.time}
logisland.provenance.repository.rollover.size=${logisland.provenance.repository.rollover.size}
logisland.provenance.repository.query.threads=${logisland.provenance.repository.query.threads}
logisland.provenance.repository.index.threads=${logisland.provenance.repository.index.threads}
logisland.provenance.repository.compress.on.rollover=${logisland.provenance.repository.compress.on.rollover}
logisland.provenance.repository.always.sync=${logisland.provenance.repository.always.sync}
logisland.provenance.repository.journal.count=${logisland.provenance.repository.journal.count}
# Comma-separated list of fields. Fields that are not indexed will not be searchable. Valid fields are: 
# EventType, FlowFileUUID, Filename, TransitURI, ProcessorID, AlternateIdentifierURI, Relationship, Details
logisland.provenance.repository.indexed.fields=${logisland.provenance.repository.indexed.fields}
# FlowFile Attributes that should be indexed and made searchable.  Some examples to consider are filename, uuid, mime.type
logisland.provenance.repository.indexed.attributes=${logisland.provenance.repository.indexed.attributes}
# Large values for the shard size will result in more Java heap usage when searching the Provenance Repository
# but should provide better performance
logisland.provenance.repository.index.shard.size=${logisland.provenance.repository.index.shard.size}
# Indicates the maximum length that a FlowFile attribute can be when retrieving a Provenance Event from
# the repository. If the length of any attribute exceeds this value, it will be truncated when the event is retrieved.
logisland.provenance.repository.max.attribute.length=${logisland.provenance.repository.max.attribute.length}

# Volatile Provenance Respository Properties
logisland.provenance.repository.buffer.size=${logisland.provenance.repository.buffer.size}

# Component Status Repository
logisland.components.status.repository.implementation=${logisland.components.status.repository.implementation}
logisland.components.status.repository.buffer.size=${logisland.components.status.repository.buffer.size}
logisland.components.status.snapshot.frequency=${logisland.components.status.snapshot.frequency}

# Site to Site properties
logisland.remote.input.socket.host=
logisland.remote.input.socket.port=
logisland.remote.input.secure=true

# web properties #
logisland.web.war.directory=${logisland.web.war.directory}
logisland.web.http.host=${logisland.web.http.host}
logisland.web.http.port=${logisland.web.http.port}
logisland.web.https.host=${logisland.web.https.host}
logisland.web.https.port=${logisland.web.https.port}
logisland.web.jetty.working.directory=${logisland.jetty.work.dir}
logisland.web.jetty.threads=${logisland.web.jetty.threads}

# security properties #
logisland.sensitive.props.key=
logisland.sensitive.props.algorithm=${logisland.sensitive.props.algorithm}
logisland.sensitive.props.provider=${logisland.sensitive.props.provider}

logisland.security.keystore=${logisland.security.keystore}
logisland.security.keystoreType=${logisland.security.keystoreType}
logisland.security.keystorePasswd=${logisland.security.keystorePasswd}
logisland.security.keyPasswd=${logisland.security.keyPasswd}
logisland.security.truststore=${logisland.security.truststore}
logisland.security.truststoreType=${logisland.security.truststoreType}
logisland.security.truststorePasswd=${logisland.security.truststorePasswd}
logisland.security.needClientAuth=${logisland.security.needClientAuth}
logisland.security.user.credential.cache.duration=${logisland.security.user.credential.cache.duration}
logisland.security.user.authority.provider=${logisland.security.user.authority.provider}
logisland.security.user.login.identity.provider=${logisland.security.user.login.identity.provider}
logisland.security.support.new.account.requests=${logisland.security.support.new.account.requests}
# Valid Authorities include: ROLE_MONITOR,ROLE_DFM,ROLE_ADMIN,ROLE_PROVENANCE,ROLE_logisland
logisland.security.anonymous.authorities=${logisland.security.anonymous.authorities}
logisland.security.ocsp.responder.url=${logisland.security.ocsp.responder.url}
logisland.security.ocsp.responder.certificate=${logisland.security.ocsp.responder.certificate}

# cluster common properties (cluster manager and nodes must have same values) #
logisland.cluster.protocol.heartbeat.interval=${logisland.cluster.protocol.heartbeat.interval}
logisland.cluster.protocol.is.secure=${logisland.cluster.protocol.is.secure}
logisland.cluster.protocol.socket.timeout=${logisland.cluster.protocol.socket.timeout}
logisland.cluster.protocol.connection.handshake.timeout=${logisland.cluster.protocol.connection.handshake.timeout}
# if multicast is used, then logisland.cluster.protocol.multicast.xxx properties must be configured #
logisland.cluster.protocol.use.multicast=${logisland.cluster.protocol.use.multicast}
logisland.cluster.protocol.multicast.address=${logisland.cluster.protocol.multicast.address}
logisland.cluster.protocol.multicast.port=${logisland.cluster.protocol.multicast.port}
logisland.cluster.protocol.multicast.service.broadcast.delay=${logisland.cluster.protocol.multicast.service.broadcast.delay}
logisland.cluster.protocol.multicast.service.locator.attempts=${logisland.cluster.protocol.multicast.service.locator.attempts}
logisland.cluster.protocol.multicast.service.locator.attempts.delay=${logisland.cluster.protocol.multicast.service.locator.attempts.delay}

# cluster node properties (only configure for cluster nodes) #
logisland.cluster.is.node=${logisland.cluster.is.node}
logisland.cluster.node.address=${logisland.cluster.node.address}
logisland.cluster.node.protocol.port=${logisland.cluster.node.protocol.port}
logisland.cluster.node.protocol.threads=${logisland.cluster.node.protocol.threads}
# if multicast is not used, logisland.cluster.node.unicast.xxx must have same values as logisland.cluster.manager.xxx #
logisland.cluster.node.unicast.manager.address=${logisland.cluster.node.unicast.manager.address}
logisland.cluster.node.unicast.manager.protocol.port=${logisland.cluster.node.unicast.manager.protocol.port}

# cluster manager properties (only configure for cluster manager) #
logisland.cluster.is.manager=${logisland.cluster.is.manager}
logisland.cluster.manager.address=${logisland.cluster.manager.address}
logisland.cluster.manager.protocol.port=${logisland.cluster.manager.protocol.port}
logisland.cluster.manager.node.firewall.file=${logisland.cluster.manager.node.firewall.file}
logisland.cluster.manager.node.event.history.size=${logisland.cluster.manager.node.event.history.size}
logisland.cluster.manager.node.api.connection.timeout=${logisland.cluster.manager.node.api.connection.timeout}
logisland.cluster.manager.node.api.read.timeout=${logisland.cluster.manager.node.api.read.timeout}
logisland.cluster.manager.node.api.request.threads=${logisland.cluster.manager.node.api.request.threads}
logisland.cluster.manager.flow.retrieval.delay=${logisland.cluster.manager.flow.retrieval.delay}
logisland.cluster.manager.protocol.threads=${logisland.cluster.manager.protocol.threads}
logisland.cluster.manager.safemode.duration=${logisland.cluster.manager.safemode.duration}

# kerberos #
logisland.kerberos.krb5.file=${logisland.kerberos.krb5.file}
logisland.kerberos.service.principal=${logisland.kerberos.service.principal}
logisland.kerberos.keytab.location=${logisland.kerberos.keytab.location}
logisland.kerberos.authentication.expiration=${logisland.kerberos.authentication.expiration}